diff -Nru decompiled/com/megacrit/cardcrawl/core/CardCrawlGame.java decompiled/com/megacrit/cardcrawl/core/CardCrawlGame.java
--- decompiled/com/megacrit/cardcrawl/core/CardCrawlGame.java	2018-01-15 12:56:25.071832900 -0800
+++ decompiled/com/megacrit/cardcrawl/core/CardCrawlGame.java	2018-01-15 13:02:38.352739600 -0800
@@ -113,6 +113,9 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+// ModLoader imports
+import modloader.ModLoader;
+
 public class CardCrawlGame
 implements ApplicationListener {
     public static String VERSION_NUM = "[EARLY_ACCESS_011] (01-11-2018)";
@@ -168,6 +171,9 @@
     public static String preferenceDir;
     private static final Logger logger;
 
+    // ModLoader variables
+    public static boolean modLoaderActive = true;
+    
     public CardCrawlGame(String prefDir) {
         preferenceDir = prefDir;
     }
@@ -241,8 +247,14 @@
             mode = GameMode.SPLASH;
             if (Settings.isDebug) {
                 CardCrawlGame.splashScreen.isDone = true;
-            }
-        }
+            }   
+
+            // ModLoader initialization
+            String jarPath = CardCrawlGame.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath();
+            jarPath = jarPath.substring(0, jarPath.lastIndexOf("/"));
+            
+            ModLoader.initialize(jarPath + "/mods/");
+        } 
         catch (Exception e) {
             ExceptionHandler.handleException(e, logger);
             Gdx.app.exit();
@@ -292,7 +304,7 @@
     public void migrateHelper(String file) {
         Preferences p = Gdx.app.getPreferences(file);
         Prefs p2 = SaveHelper.getPrefs(file);
-        Map map = p.get();
+        Map<?,?> map = p.get();
         for (Map.Entry c : map.entrySet()) {
             p2.putString(c.getKey(), p.getString(c.getKey()));
         }
@@ -497,6 +509,9 @@
     }
 
     public void update() {
+        // ModLoader hook
+        if (modLoaderActive) ModLoader.updateHook();
+        
         cursor.update();
         screenShake.update(viewport);
         if (mode != GameMode.SPLASH) {
@@ -569,6 +584,10 @@
                         }
                         monstersSlain = 0;
                         elitesSlain = 0;
+                        
+                        // ModLoader hook
+                        if (modLoaderActive) ModLoader.startGameHook();
+                        
                         break;
                     }
                     if (!Settings.isTrial) break;
diff -Nru decompiled/com/megacrit/cardcrawl/dungeons/Exordium.java decompiled/com/megacrit/cardcrawl/dungeons/Exordium.java
--- decompiled/com/megacrit/cardcrawl/dungeons/Exordium.java	2018-01-15 12:56:25.601841800 -0800
+++ decompiled/com/megacrit/cardcrawl/dungeons/Exordium.java	2018-01-15 13:03:16.373598500 -0800
@@ -31,6 +31,10 @@
 import java.util.Collections;
 import java.util.HashMap;
 
+// ModLoader imports
+import modloader.CustomEncounter;
+import modloader.ModLoader;
+
 public class Exordium
 extends AbstractDungeon {
     private static final UIStrings uiStrings = CardCrawlGame.languagePack.getUIString("Exordium");
@@ -112,6 +116,12 @@
         monsters.add(new MonsterInfo("Jaw Worm", 2.0f));
         monsters.add(new MonsterInfo("2 Louse", 2.0f));
         monsters.add(new MonsterInfo("Small Slimes", 2.0f));
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.monsterPoolHook(monsters, CustomEncounter.Floor.EXORDIUM, CustomEncounter.Group.WEAK);
+        }
+        
         MonsterInfo.normalizeWeights(monsters);
         this.populateMonsterList(monsters, 3, false);
         monsters.clear();
@@ -124,6 +134,12 @@
         monsters.add(new MonsterInfo("Red Slaver", 1.0f));
         monsters.add(new MonsterInfo("3 Louse", 2.0f));
         monsters.add(new MonsterInfo("2 Fungi Beasts", 2.0f));
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.monsterPoolHook(monsters, CustomEncounter.Floor.EXORDIUM, CustomEncounter.Group.STRONG);
+        }
+        
         MonsterInfo.normalizeWeights(monsters);
         this.populateFirstStrongEnemy(monsters, this.generateExclusions());
         this.populateMonsterList(monsters, 12, false);
@@ -131,6 +147,12 @@
         monsters.add(new MonsterInfo("Gremlin Nob", 1.0f));
         monsters.add(new MonsterInfo("Lagavulin", 1.0f));
         monsters.add(new MonsterInfo("3 Sentries", 1.0f));
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.monsterPoolHook(monsters, CustomEncounter.Floor.EXORDIUM, CustomEncounter.Group.ELITE);
+        }
+        
         MonsterInfo.normalizeWeights(monsters);
         this.populateMonsterList(monsters, 5, true);
     }
@@ -179,6 +201,12 @@
             bossList.add("The Guardian");
             bossList.add("Hexaghost");
             bossList.add("Slime Boss");
+            
+            // ModLoader hook
+            if (CardCrawlGame.modLoaderActive) {
+                ModLoader.bossPoolHook(bossList, CustomEncounter.Floor.EXORDIUM);
+            }
+        
             Collections.shuffle(bossList);
         }
         if (Settings.isDemo) {
@@ -200,6 +228,11 @@
         eventList.add("Mushrooms");
         eventList.add("Scrap Ooze");
         eventList.add("Shining Light");
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.eventListHook(eventList, CustomEncounter.Floor.EXORDIUM);
+        }
     }
 
     @Override
@@ -210,6 +243,11 @@
         shrineList.add("Purifier");
         shrineList.add("Upgrade Shrine");
         shrineList.add("Wheel of Change");
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.shrineListHook(shrineList, CustomEncounter.Floor.EXORDIUM);
+        }
     }
 
     @Override
diff -Nru decompiled/com/megacrit/cardcrawl/dungeons/TheBeyond.java decompiled/com/megacrit/cardcrawl/dungeons/TheBeyond.java
--- decompiled/com/megacrit/cardcrawl/dungeons/TheBeyond.java	2018-01-15 12:56:25.612852100 -0800
+++ decompiled/com/megacrit/cardcrawl/dungeons/TheBeyond.java	2018-01-15 13:03:32.902270100 -0800
@@ -24,6 +24,10 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+// ModLoader imports
+import modloader.CustomEncounter;
+import modloader.ModLoader;
+
 public class TheBeyond
 extends AbstractDungeon {
     private static final Logger logger = LogManager.getLogger(TheBeyond.class.getName());
@@ -90,6 +94,12 @@
         monsters.add(new MonsterInfo("3 Darklings", 2.0f));
         monsters.add(new MonsterInfo("Orb Walker", 2.0f));
         monsters.add(new MonsterInfo("3 Shapes", 2.0f));
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.monsterPoolHook(monsters, CustomEncounter.Floor.BEYOND, CustomEncounter.Group.WEAK);
+        }
+        
         MonsterInfo.normalizeWeights(monsters);
         this.populateMonsterList(monsters, 2, false);
         monsters.clear();
@@ -101,6 +111,12 @@
         monsters.add(new MonsterInfo("Maw", 1.0f));
         monsters.add(new MonsterInfo("Sphere and 2 Shapes", 1.0f));
         monsters.add(new MonsterInfo("3 Darklings", 1.0f));
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.monsterPoolHook(monsters, CustomEncounter.Floor.BEYOND, CustomEncounter.Group.STRONG);
+        }
+        
         MonsterInfo.normalizeWeights(monsters);
         this.populateFirstStrongEnemy(monsters, this.generateExclusions());
         this.populateMonsterList(monsters, 12, false);
@@ -108,6 +124,12 @@
         monsters.add(new MonsterInfo("Giant Head", 2.0f));
         monsters.add(new MonsterInfo("Nemesis", 2.0f));
         monsters.add(new MonsterInfo("2 Orb Walkers", 2.0f));
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.monsterPoolHook(monsters, CustomEncounter.Floor.BEYOND, CustomEncounter.Group.ELITE);
+        }
+        
         MonsterInfo.normalizeWeights(monsters);
         this.populateMonsterList(monsters, 5, true);
         logger.info("Random counter: " + TheBeyond.monsterRng.counter);
@@ -149,6 +171,12 @@
             bossList.add("Awakened One");
             bossList.add("Time Eater");
             bossList.add("Donu and Deca");
+            
+            // ModLoader hook
+            if (CardCrawlGame.modLoaderActive) {
+                ModLoader.bossPoolHook(bossList, CustomEncounter.Floor.BEYOND);
+            }
+        
             Collections.shuffle(bossList);
         }
     }
@@ -160,6 +188,11 @@
         eventList.add("Mysterious Sphere");
         eventList.add("Tomb of Lord Red Mask");
         eventList.add("Winding Halls");
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.eventListHook(eventList, CustomEncounter.Floor.BEYOND);
+        }
     }
 
     @Override
@@ -179,6 +212,11 @@
         shrineList.add("Transmorgrifier");
         shrineList.add("Purifier");
         shrineList.add("Upgrade Shrine");
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.shrineListHook(shrineList, CustomEncounter.Floor.BEYOND);
+        }
     }
 }
 
diff -Nru decompiled/com/megacrit/cardcrawl/dungeons/TheCity.java decompiled/com/megacrit/cardcrawl/dungeons/TheCity.java
--- decompiled/com/megacrit/cardcrawl/dungeons/TheCity.java	2018-01-15 12:56:25.624863900 -0800
+++ decompiled/com/megacrit/cardcrawl/dungeons/TheCity.java	2018-01-15 13:03:44.531512000 -0800
@@ -27,6 +27,10 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+// ModLoader imports
+import modloader.CustomEncounter;
+import modloader.ModLoader;
+
 public class TheCity
 extends AbstractDungeon {
     private static final Logger logger = LogManager.getLogger(TheCity.class.getName());
@@ -95,6 +99,12 @@
         monsters.add(new MonsterInfo("3 Byrds", 2.0f));
         monsters.add(new MonsterInfo("2 Thieves", 2.0f));
         MonsterInfo.normalizeWeights(monsters);
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.monsterPoolHook(monsters, CustomEncounter.Floor.CITY, CustomEncounter.Group.WEAK);
+        }
+        
         this.populateMonsterList(monsters, 2, false);
         monsters.clear();
         monsters.add(new MonsterInfo("Chosen and Byrds", 2.0f));
@@ -104,6 +114,12 @@
         monsters.add(new MonsterInfo("Snecko", 4.0f));
         monsters.add(new MonsterInfo("Centurion and Healer", 6.0f));
         monsters.add(new MonsterInfo("3 Cultists", 4.0f));
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.monsterPoolHook(monsters, CustomEncounter.Floor.CITY, CustomEncounter.Group.STRONG);
+        }
+         
         MonsterInfo.normalizeWeights(monsters);
         this.populateFirstStrongEnemy(monsters, this.generateExclusions());
         this.populateMonsterList(monsters, 12, false);
@@ -111,6 +127,12 @@
         monsters.add(new MonsterInfo("Gremlin Leader", 1.0f));
         monsters.add(new MonsterInfo("Slavers", 1.0f));
         monsters.add(new MonsterInfo("Book of Stabbing", 1.0f));
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.monsterPoolHook(monsters, CustomEncounter.Floor.CITY, CustomEncounter.Group.ELITE);
+        }
+        
         MonsterInfo.normalizeWeights(monsters);
         this.populateMonsterList(monsters, 5, true);
         logger.info("Random counter: " + TheCity.monsterRng.counter);
@@ -152,6 +174,12 @@
             bossList.add("Automaton");
             bossList.add("Collector");
             bossList.add("Champ");
+            
+            // ModLoader hook
+            if (CardCrawlGame.modLoaderActive) {
+                ModLoader.bossPoolHook(bossList, CustomEncounter.Floor.CITY);
+            }
+        
             Collections.shuffle(bossList);
         }
     }
@@ -170,6 +198,11 @@
         eventList.add("Cursed Tome");
         eventList.add("The Library");
         eventList.add("Forgotten Altar");
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.eventListHook(eventList, CustomEncounter.Floor.CITY);
+        }
     }
 
     @Override
@@ -189,6 +222,11 @@
         shrineList.add("Transmorgrifier");
         shrineList.add("Purifier");
         shrineList.add("Upgrade Shrine");
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            ModLoader.shrineListHook(shrineList, CustomEncounter.Floor.CITY);
+        }
     }
 }
 
diff -Nru decompiled/com/megacrit/cardcrawl/helpers/EventHelper.java decompiled/com/megacrit/cardcrawl/helpers/EventHelper.java
--- decompiled/com/megacrit/cardcrawl/helpers/EventHelper.java	2018-01-15 12:56:26.418125600 -0800
+++ decompiled/com/megacrit/cardcrawl/helpers/EventHelper.java	2018-01-15 13:04:06.495104100 -0800
@@ -56,6 +56,10 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+// ModLoader imports
+import com.megacrit.cardcrawl.core.CardCrawlGame;
+import modloader.ModLoader;
+
 public class EventHelper {
     private static final Logger logger = LogManager.getLogger(EventHelper.class.getName());
     private static final float BASE_ELITE_CHANCE = 0.02f;
@@ -156,6 +160,12 @@
     }
 
     public static AbstractEvent getEvent(String key) {
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            AbstractEvent customEvent = ModLoader.customEventHook(key);
+            if (customEvent != null) return customEvent;
+        }
+        
         switch (key) {
             case "Accursed Blacksmith": {
                 return new AccursedBlacksmith();
diff -Nru decompiled/com/megacrit/cardcrawl/helpers/MonsterHelper.java decompiled/com/megacrit/cardcrawl/helpers/MonsterHelper.java
--- decompiled/com/megacrit/cardcrawl/helpers/MonsterHelper.java	2018-01-15 12:56:26.820511800 -0800
+++ decompiled/com/megacrit/cardcrawl/helpers/MonsterHelper.java	2018-01-15 13:04:28.009950200 -0800
@@ -76,6 +76,10 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+// ModLoader imports
+import modloader.ModLoader;
+import com.megacrit.cardcrawl.core.CardCrawlGame;
+
 public class MonsterHelper {
     private static final Logger logger = LogManager.getLogger(MonsterHelper.class.getName());
     private static String lastEncounterName = null;
@@ -143,6 +147,12 @@
     public static final String APOLOGY_SLIME_ENC = "Apologetic Slime";
 
     public static MonsterGroup getEncounter(String key) {
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) {
+            MonsterGroup customGroup = ModLoader.customEncounterHook(key);
+            if (customGroup != null) return customGroup;
+        }
+        
         switch (key) {
             case "Blue Slaver": {
                 return new MonsterGroup(new SlaverBlue(0.0f, 0.0f));
diff -Nru decompiled/com/megacrit/cardcrawl/screens/charSelect/CharacterOption.java decompiled/com/megacrit/cardcrawl/screens/charSelect/CharacterOption.java
--- decompiled/com/megacrit/cardcrawl/screens/charSelect/CharacterOption.java	2018-01-15 12:56:29.549129500 -0800
+++ decompiled/com/megacrit/cardcrawl/screens/charSelect/CharacterOption.java	2018-01-15 13:04:52.553500200 -0800
@@ -34,6 +34,9 @@
 import com.megacrit.cardcrawl.unlock.UnlockTracker;
 import java.util.ArrayList;
 
+// ModLoader imports
+import modloader.ModLoader;
+
 public class CharacterOption {
     private static final UIStrings uiStrings = CardCrawlGame.languagePack.getUIString("CharacterOption");
     public static final String[] TEXT = CharacterOption.uiStrings.TEXT;
@@ -82,6 +85,10 @@
                 break;
             }
         }
+        
+        // ModLoader hook
+        if (CardCrawlGame.modLoaderActive) ModLoader.charOptionHook(charInfo);
+        
         this.hp = this.charInfo.hp;
         this.gold = this.charInfo.gold;
         this.flavorText = this.charInfo.flavorText;
